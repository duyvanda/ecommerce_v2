[{"D:\\ecommerce-django-react\\frontend\\src\\index.js":"1","D:\\ecommerce-django-react\\frontend\\src\\store.js":"2","D:\\ecommerce-django-react\\frontend\\src\\reportWebVitals.js":"3","D:\\ecommerce-django-react\\frontend\\src\\App.js":"4","D:\\ecommerce-django-react\\frontend\\src\\reducers\\orderReducers.js":"5","D:\\ecommerce-django-react\\frontend\\src\\reducers\\productReducers.js":"6","D:\\ecommerce-django-react\\frontend\\src\\reducers\\cartReducers.js":"7","D:\\ecommerce-django-react\\frontend\\src\\screens\\ProductScreen.js":"8","D:\\ecommerce-django-react\\frontend\\src\\reducers\\userReducers.js":"9","D:\\ecommerce-django-react\\frontend\\src\\screens\\CartScreen.js":"10","D:\\ecommerce-django-react\\frontend\\src\\screens\\HomeScreen.js":"11","D:\\ecommerce-django-react\\frontend\\src\\screens\\RegisterScreen.js":"12","D:\\ecommerce-django-react\\frontend\\src\\screens\\ProfileSceen.js":"13","D:\\ecommerce-django-react\\frontend\\src\\screens\\ShippingScreen.js":"14","D:\\ecommerce-django-react\\frontend\\src\\screens\\PlaceOrderScreen.js":"15","D:\\ecommerce-django-react\\frontend\\src\\screens\\OrderScreen.js":"16","D:\\ecommerce-django-react\\frontend\\src\\components\\Footer.js":"17","D:\\ecommerce-django-react\\frontend\\src\\screens\\LoginScreen.js":"18","D:\\ecommerce-django-react\\frontend\\src\\screens\\PaymentScreen.js":"19","D:\\ecommerce-django-react\\frontend\\src\\components\\Header.js":"20","D:\\ecommerce-django-react\\frontend\\src\\components\\Loader.js":"21","D:\\ecommerce-django-react\\frontend\\src\\components\\Message.js":"22","D:\\ecommerce-django-react\\frontend\\src\\components\\Rating.js":"23","D:\\ecommerce-django-react\\frontend\\src\\components\\FormContainer.js":"24","D:\\ecommerce-django-react\\frontend\\src\\components\\Product.js":"25","D:\\ecommerce-django-react\\frontend\\src\\components\\CheckoutSteps.js":"26","D:\\ecommerce-django-react\\frontend\\src\\components\\SearchBox.js":"27","D:\\ecommerce-django-react\\frontend\\src\\constants\\userConstants.js":"28","D:\\ecommerce-django-react\\frontend\\src\\constants\\orderConstants.js":"29","D:\\ecommerce-django-react\\frontend\\src\\constants\\cartConstants.js":"30","D:\\ecommerce-django-react\\frontend\\src\\constants\\productConstants.js":"31","D:\\ecommerce-django-react\\frontend\\src\\actions\\userActions.js":"32","D:\\ecommerce-django-react\\frontend\\src\\actions\\cartActions.js":"33","D:\\ecommerce-django-react\\frontend\\src\\actions\\productActions.js":"34","D:\\ecommerce-django-react\\frontend\\src\\actions\\orderActions.js":"35"},{"size":612,"mtime":1646576635309,"results":"36","hashOfConfig":"37"},{"size":2398,"mtime":1646576635315,"results":"38","hashOfConfig":"37"},{"size":375,"mtime":1646576635311,"results":"39","hashOfConfig":"37"},{"size":1815,"mtime":1646635981565,"results":"40","hashOfConfig":"37"},{"size":3221,"mtime":1646576635310,"results":"41","hashOfConfig":"37"},{"size":3573,"mtime":1646625453014,"results":"42","hashOfConfig":"37"},{"size":1161,"mtime":1646576635310,"results":"43","hashOfConfig":"37"},{"size":6573,"mtime":1646576635313,"results":"44","hashOfConfig":"37"},{"size":3484,"mtime":1646576635311,"results":"45","hashOfConfig":"37"},{"size":3212,"mtime":1646576635311,"results":"46","hashOfConfig":"37"},{"size":1233,"mtime":1646635108580,"results":"47","hashOfConfig":"37"},{"size":3019,"mtime":1646576635314,"results":"48","hashOfConfig":"37"},{"size":4787,"mtime":1646576635314,"results":"49","hashOfConfig":"37"},{"size":2427,"mtime":1646576635314,"results":"50","hashOfConfig":"37"},{"size":4473,"mtime":1646576635313,"results":"51","hashOfConfig":"37"},{"size":6208,"mtime":1646624640968,"results":"52","hashOfConfig":"37"},{"size":276,"mtime":1646576635306,"results":"53","hashOfConfig":"37"},{"size":2119,"mtime":1646576635312,"results":"54","hashOfConfig":"37"},{"size":1395,"mtime":1646576635312,"results":"55","hashOfConfig":"37"},{"size":1681,"mtime":1646659732143,"results":"56","hashOfConfig":"37"},{"size":367,"mtime":1646576635306,"results":"57","hashOfConfig":"37"},{"size":201,"mtime":1646576635306,"results":"58","hashOfConfig":"37"},{"size":1258,"mtime":1646576635307,"results":"59","hashOfConfig":"37"},{"size":323,"mtime":1646576635306,"results":"60","hashOfConfig":"37"},{"size":848,"mtime":1646576635307,"results":"61","hashOfConfig":"37"},{"size":1130,"mtime":1646576635305,"results":"62","hashOfConfig":"37"},{"size":931,"mtime":1646625556352,"results":"63","hashOfConfig":"37"},{"size":1536,"mtime":1646576635309,"results":"64","hashOfConfig":"37"},{"size":1288,"mtime":1646576635308,"results":"65","hashOfConfig":"37"},{"size":301,"mtime":1646576635308,"results":"66","hashOfConfig":"37"},{"size":1550,"mtime":1646576635308,"results":"67","hashOfConfig":"37"},{"size":6118,"mtime":1646576635304,"results":"68","hashOfConfig":"37"},{"size":1247,"mtime":1646576635303,"results":"69","hashOfConfig":"37"},{"size":5001,"mtime":1646576635304,"results":"70","hashOfConfig":"37"},{"size":4903,"mtime":1646576635303,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1rfm4lo",{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"74"},"D:\\ecommerce-django-react\\frontend\\src\\index.js",[],["155","156"],"D:\\ecommerce-django-react\\frontend\\src\\store.js",[],"D:\\ecommerce-django-react\\frontend\\src\\reportWebVitals.js",[],"D:\\ecommerce-django-react\\frontend\\src\\App.js",[],"D:\\ecommerce-django-react\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\ecommerce-django-react\\frontend\\src\\reducers\\productReducers.js",["157"],"import axios from \"axios\";\r\nimport {\r\n\tPRODUCT_LIST_REQUEST,\r\n\tPRODUCT_LIST_SUCCESS,\r\n\tPRODUCT_LIST_FAIL,\r\n\tPRODUCT_DETAILS_REQUEST,\r\n\tPRODUCT_DETAILS_SUCCESS,\r\n\tPRODUCT_DETAILS_FAIL,\r\n\tPRODUCT_DELETE_REQUEST,\r\n\tPRODUCT_DELETE_SUCCESS,\r\n\tPRODUCT_DELETE_FAIL,\r\n\tPRODUCT_CREATE_REQUEST,\r\n\tPRODUCT_CREATE_SUCCESS,\r\n\tPRODUCT_CREATE_FAIL,\r\n\tPRODUCT_UPDATE_REQUEST,\r\n\tPRODUCT_UPDATE_SUCCESS,\r\n\tPRODUCT_UPDATE_FAIL,\r\n\tPRODUCT_UPDATE_RESET,\r\n\tPRODUCT_CREATE_REVIEW_REQUEST,\r\n\tPRODUCT_CREATE_REVIEW_SUCCESS,\r\n\tPRODUCT_CREATE_REVIEW_FAIL,\r\n\tPRODUCT_CREATE_REVIEW_RESET,\r\n\tPRODUCT_CREATE_RESET,\r\n\tPRODUCT_TOP_REQUEST,\r\n\tPRODUCT_TOP_SUCCESS,\r\n\tPRODUCT_TOP_FAIL,\r\n} from \"../constants/productConstants\";\r\n\r\nexport const productListReducers = (state = { products: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase PRODUCT_LIST_REQUEST:\r\n\t\t\treturn { loading: true, products: [] };\r\n\r\n\t\tcase PRODUCT_LIST_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tproducts: action.payload,\r\n\t\t\t};\r\n\r\n\t\tcase PRODUCT_LIST_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const productDetailsReducers = (\r\n\tstate = { product: { reviews: [] } },\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase PRODUCT_DETAILS_REQUEST:\r\n\t\t\treturn { loading: true, ...state };\r\n\t\tcase PRODUCT_DETAILS_SUCCESS:\r\n\t\t\treturn { loading: false, product: action.payload };\r\n\t\tcase PRODUCT_DETAILS_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase PRODUCT_DELETE_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase PRODUCT_DELETE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true };\r\n\r\n\t\tcase PRODUCT_DELETE_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase PRODUCT_CREATE_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase PRODUCT_CREATE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true, product: action.payload };\r\n\r\n\t\tcase PRODUCT_CREATE_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase PRODUCT_CREATE_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase PRODUCT_UPDATE_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase PRODUCT_UPDATE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true, product: action.payload };\r\n\r\n\t\tcase PRODUCT_UPDATE_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase PRODUCT_UPDATE_RESET:\r\n\t\t\treturn { product: {} };\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase PRODUCT_CREATE_REVIEW_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\r\n\t\tcase PRODUCT_CREATE_REVIEW_SUCCESS:\r\n\t\t\treturn { loading: false, success: true };\r\n\r\n\t\tcase PRODUCT_CREATE_REVIEW_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tcase PRODUCT_CREATE_REVIEW_RESET:\r\n\t\t\treturn {};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase PRODUCT_TOP_REQUEST:\r\n\t\t\treturn { loading: true, products: [] };\r\n\r\n\t\tcase PRODUCT_TOP_SUCCESS:\r\n\t\t\treturn { loading: false, products: action.payload };\r\n\r\n\t\tcase PRODUCT_TOP_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload };\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","D:\\ecommerce-django-react\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\ecommerce-django-react\\frontend\\src\\screens\\ProductScreen.js",["158"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n\tRow,\r\n\tCol,\r\n\tImage,\r\n\tListGroup,\r\n\tButton,\r\n\tCard,\r\n\tForm,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n\tlistProductDetails,\r\n\tcreateProductReview,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\n\r\nfunction ProductScreen({ match, history }) {\r\n\tconst [qty, setQty] = useState(1);\r\n\tconst [rating, setRating] = useState(0);\r\n\tconst [comment, setComment] = useState(\"\");\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst productDetails = useSelector((state) => state.productDetailsReducers);\r\n\tconst { loading, error, product } = productDetails;\r\n\r\n\tconst userLogin = useSelector((state) => state.userLoginReducers);\r\n\tconst { userInfo } = userLogin;\r\n\r\n\tconst productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n\tconst {\r\n\t\tloading: loadingProductReview,\r\n\t\terror: errorProductReview,\r\n\t\tsuccess: successProductReview,\r\n\t} = productReviewCreate;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (successProductReview) {\r\n\t\t\tsetRating(0);\r\n\t\t\tsetComment(\"\");\r\n\t\t\tdispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n\t\t}\r\n\t\tdispatch(listProductDetails(match.params.id));\r\n\t}, [dispatch, match, successProductReview]);\r\n\r\n\tconsole.log(\"product\", product.reviews);\r\n\r\n\tconst addToCartHandler = () => {\r\n\t\thistory.push(`/cart/${match.params.id}?qty=${qty}`);\r\n\t};\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(\r\n\t\t\tcreateProductReview(match.params.id, {\r\n\t\t\t\trating,\r\n\t\t\t\tcomment,\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Link to=\"/\" className=\"btn btn-light my-3\">\r\n\t\t\t\tGo Back\r\n\t\t\t</Link>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<Loader />\r\n\t\t\t) : error ? (\r\n\t\t\t\t<Message variant=\"danger\">{error}</Message>\r\n\t\t\t) : (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md={6}>\r\n\t\t\t\t\t\t\t<Image src={product.image} alt={product.name} fluid />\r\n\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t<Col md={3}>\r\n\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t<h3>{product.name}</h3>\r\n\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t<Rating\r\n\t\t\t\t\t\t\t\t\t\tvalue={product.rating}\r\n\t\t\t\t\t\t\t\t\t\ttext={`${product.numReviews} reviews`}\r\n\t\t\t\t\t\t\t\t\t\tcolor={\"#f8e825\"}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t\t<ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\tDescription: {product.description}\r\n\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t<Col md={3}>\r\n\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>Price:</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>${product.price}</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>Status:</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t\t\t{product.countInStock > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col>Qty</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col xs=\"auto\" className=\"my-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={qty}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setQty(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{[...Array(product.countInStock).keys()].map(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(x) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option key={x + 1} value={x + 1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{x + 1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"d-grid\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={addToCartHandler}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn-block\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={product.countInStock == 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tAdd to Cart\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md={6}>\r\n\t\t\t\t\t\t\t<h4>Reviews</h4>\r\n\t\t\t\t\t\t\t{product.reviews.length === 0 && (\r\n\t\t\t\t\t\t\t\t<Message variant=\"info\">No Reviews</Message>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t\t\t{product.reviews.map((review) => (\r\n\t\t\t\t\t\t\t\t\t<ListGroup.Item key={review._id}>\r\n\t\t\t\t\t\t\t\t\t\t<strong>{review.name}</strong>\r\n\t\t\t\t\t\t\t\t\t\t<Rating value={review.rating} color=\"#f8e825\" />\r\n\t\t\t\t\t\t\t\t\t\t<p>{review.createdAt.substring(0, 10)}</p>\r\n\t\t\t\t\t\t\t\t\t\t<p>{review.comment}</p>\r\n\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t<h4>Write a review</h4>\r\n\r\n\t\t\t\t\t\t\t\t\t{loadingProductReview && <Loader />}\r\n\t\t\t\t\t\t\t\t\t{successProductReview && (\r\n\t\t\t\t\t\t\t\t\t\t<Message variant=\"success\">Review Submitted</Message>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{errorProductReview && (\r\n\t\t\t\t\t\t\t\t\t\t<Message variant=\"danger\">{errorProductReview}</Message>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{userInfo ? (\r\n\t\t\t\t\t\t\t\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"rating\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Rating</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={rating}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRating(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select...</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"1\">1 - Poor</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2 - Fair</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3 - Good</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4 - Very Good</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5 - Excellent</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"comment\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Review</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trow=\"5\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={comment}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setComment(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={loadingProductReview}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Message variant=\"info\">\r\n\t\t\t\t\t\t\t\t\t\t\tPlease <Link to=\"/login\">login</Link> to write a review\r\n\t\t\t\t\t\t\t\t\t\t</Message>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ProductScreen;\r\n","D:\\ecommerce-django-react\\frontend\\src\\reducers\\userReducers.js",[],"D:\\ecommerce-django-react\\frontend\\src\\screens\\CartScreen.js",[],"D:\\ecommerce-django-react\\frontend\\src\\screens\\HomeScreen.js",["159"],"import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n// import Paginate from \"../components/Paginate\";\r\n// import ProductCarousel from \"../components/ProductCarousel\";\r\n\r\nfunction HomeScreen({ history }) {\r\n\tconst dispatch = useDispatch();\r\n\tconst productList = useSelector((state) => state.productListReducers);\r\n\tconst { error, loading, products } = productList;\r\n\r\n\tlet keyword = history.location.search;\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(listProducts(keyword));\r\n\t}, [dispatch, keyword]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{/* {!keyword && <ProductCarousel />} */}\r\n\t\t\t<h1>Lastest Product</h1>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<Loader />\r\n\t\t\t) : error ? (\r\n\t\t\t\t<Message variant=\"danger\">{error}</Message>\r\n\t\t\t) : (\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{products.map((product) => (\r\n\t\t\t\t\t\t<Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n\t\t\t\t\t\t\t<Product product={product} />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Row>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default HomeScreen;\r\n","D:\\ecommerce-django-react\\frontend\\src\\screens\\RegisterScreen.js",["160"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { register } from \"../actions/userActions\";\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\tconst [name, setName] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\tconst [message, setMessage] = useState(\"\");\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n\tconst userRegister = useSelector((state) => state.userRegisterReducers);\r\n\tconst { error, loading, userInfo } = userRegister;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userInfo) {\r\n\t\t\thistory.push(redirect);\r\n\t\t}\r\n\t}, [history, userInfo, redirect]);\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (password != confirmPassword) {\r\n\t\t\tsetMessage(\"Passwords do not match\");\r\n\t\t} else {\r\n\t\t\tdispatch(register(name, email, password));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<FormContainer>\r\n\t\t\t<h1>Sign In</h1>\r\n\t\t\t{message && <Message variant=\"danger\">{message}</Message>}\r\n\t\t\t{error && <Message variant=\"danger\">{error}</Message>}\r\n\t\t\t{loading && <Loader />}\r\n\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t<Form.Group controlId=\"name\">\r\n\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\ttype=\"name\"\r\n\t\t\t\t\t\tplaceholder=\"Enter name\"\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group controlId=\"email\">\r\n\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tplaceholder=\"Enter Email\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group controlId=\"password\">\r\n\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"Enter Password\"\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group controlId=\"passwordConfirm\">\r\n\t\t\t\t\t<Form.Label>Confirm Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Button type=\"submit\" variant=\"primary\">\r\n\t\t\t\t\tRegister\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\r\n\t\t\t<Row className=\"py-3\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t\tHave an Account?{\" \"}\r\n\t\t\t\t\t<Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n\t\t\t\t\t\tSign In\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</FormContainer>\r\n\t);\r\n}\r\n\r\nexport default RegisterScreen;\r\n","D:\\ecommerce-django-react\\frontend\\src\\screens\\ProfileSceen.js",["161","162"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\n\r\nfunction ProfileScreen({ history }) {\r\n\tconst [name, setName] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\tconst [message, setMessage] = useState(\"\");\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst userDetails = useSelector((state) => state.userDetailsReducers);\r\n\tconst { error, loading, user } = userDetails;\r\n\r\n\tconst userLogin = useSelector((state) => state.userLoginReducers);\r\n\tconst { userInfo } = userLogin;\r\n\r\n\tconst userUpdateProfile = useSelector(\r\n\t\t(state) => state.userUpdateProfileReducers\r\n\t);\r\n\tconst { success } = userUpdateProfile;\r\n\r\n\tconst orderListMy = useSelector((state) => state.orderListMy);\r\n\tconst { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!userInfo) {\r\n\t\t\thistory.push(\"/login\");\r\n\t\t} else {\r\n\t\t\tif (!user || !user.name || success || userInfo._id !== user._id) {\r\n\t\t\t\tdispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n\t\t\t\tdispatch(getUserDetails(\"profile\"));\r\n\t\t\t\tdispatch(listMyOrders());\r\n\t\t\t} else {\r\n\t\t\t\tsetName(user.name);\r\n\t\t\t\tsetEmail(user.email);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [dispatch, history, userInfo, user, success]);\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (password != confirmPassword) {\r\n\t\t\tsetMessage(\"Passwords do not match\");\r\n\t\t} else {\r\n\t\t\tdispatch(\r\n\t\t\t\tupdateUserProfile({\r\n\t\t\t\t\tid: user._id,\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t\temail: email,\r\n\t\t\t\t\tpassword: password,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tsetMessage(\"\");\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t<Col md={3}>\r\n\t\t\t\t<h2>User Profile</h2>\r\n\t\t\t\t{message && <Message variant=\"danger\">{message}</Message>}\r\n\t\t\t\t{error && <Message variant=\"danger\">{error}</Message>}\r\n\t\t\t\t{loading && <Loader />}\r\n\t\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t\t<Form.Group controlId=\"name\">\r\n\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\ttype=\"name\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter name\"\r\n\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Form.Group controlId=\"email\">\r\n\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter Email\"\r\n\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Form.Group controlId=\"password\">\r\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Form.Group controlId=\"passwordConfirm\">\r\n\t\t\t\t\t\t<Form.Label>Confirm Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Button type=\"submit\" variant=\"primary\">\r\n\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Col>\r\n\t\t\t<Col md={9}>\r\n\t\t\t\t<h2>My Orders</h2>\r\n\t\t\t\t{loadingOrders ? (\r\n\t\t\t\t\t<Loader />\r\n\t\t\t\t) : errorOrders ? (\r\n\t\t\t\t\t<Message variant=\"danger\">{errorOrders}</Message>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Table striped responsive className=\"table-sm\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>ID</th>\r\n\t\t\t\t\t\t\t\t<th>Date</th>\r\n\t\t\t\t\t\t\t\t<th>Total</th>\r\n\t\t\t\t\t\t\t\t<th>Paid</th>\r\n\t\t\t\t\t\t\t\t<th>Delivered</th>\r\n\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{orders.map((order) => (\r\n\t\t\t\t\t\t\t\t<tr key={order._id}>\r\n\t\t\t\t\t\t\t\t\t<td>{order._id}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{order.createdAt.substring(0, 10)}</td>\r\n\t\t\t\t\t\t\t\t\t<td>${order.totalPrice}</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t{order.isPaid ? (\r\n\t\t\t\t\t\t\t\t\t\t\torder.paidAt.substring(0, 10)\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<LinkContainer to={`/order/${order._id}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button className=\"btn-sm\">Details</Button>\r\n\t\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t)}\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n}\r\n\r\nexport default ProfileScreen;\r\n","D:\\ecommerce-django-react\\frontend\\src\\screens\\ShippingScreen.js",["163"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nfunction ShippingScreen({ history }) {\r\n\tconst cart = useSelector((state) => state.cartReducers);\r\n\tconst { shippingAddress } = cart;\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [address, setAddress] = useState(shippingAddress.address);\r\n\tconst [city, setCity] = useState(shippingAddress.city);\r\n\tconst [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n\tconst [country, setCountry] = useState(shippingAddress.country);\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n\t\thistory.push(\"/payment\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<FormContainer>\r\n\t\t\t<CheckoutSteps step1 step2 />\r\n\t\t\t<h1>Shipping</h1>\r\n\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t<Form.Group controlId=\"address\">\r\n\t\t\t\t\t<Form.Label>Address</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Enter address\"\r\n\t\t\t\t\t\tvalue={address ? address : \"\"}\r\n\t\t\t\t\t\tonChange={(e) => setAddress(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group controlId=\"city\">\r\n\t\t\t\t\t<Form.Label>City</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Enter city\"\r\n\t\t\t\t\t\tvalue={city ? city : \"\"}\r\n\t\t\t\t\t\tonChange={(e) => setCity(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group controlId=\"postalCode\">\r\n\t\t\t\t\t<Form.Label>Postal Code</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Enter postal code\"\r\n\t\t\t\t\t\tvalue={postalCode ? postalCode : \"\"}\r\n\t\t\t\t\t\tonChange={(e) => setPostalCode(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group controlId=\"country\">\r\n\t\t\t\t\t<Form.Label>Country</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Enter country\"\r\n\t\t\t\t\t\tvalue={country ? country : \"\"}\r\n\t\t\t\t\t\tonChange={(e) => setCountry(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Button type=\"submit\" variant=\"primary\">\r\n\t\t\t\t\tContinue\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t</FormContainer>\r\n\t);\r\n}\r\n\r\nexport default ShippingScreen;\r\n","D:\\ecommerce-django-react\\frontend\\src\\screens\\PlaceOrderScreen.js",["164","165"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\tconst orderCreate = useSelector((state) => state.orderCreateReducers);\r\n\tconst { order, error, success } = orderCreate;\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst cart = useSelector((state) => state.cartReducers);\r\n\r\n\tcart.itemsPrice = cart.cartItems\r\n\t\t.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n\t\t.toFixed(2);\r\n\tcart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2);\r\n\tcart.taxPrice = Number(0.082 * cart.itemsPrice).toFixed(2);\r\n\r\n\tcart.totalPrice = (\r\n\t\tNumber(cart.itemsPrice) +\r\n\t\tNumber(cart.shippingPrice) +\r\n\t\tNumber(cart.taxPrice)\r\n\t).toFixed(2);\r\n\r\n\tif (!cart.paymentMethod) {\r\n\t\thistory.push(\"/payment\");\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (success) {\r\n\t\t\thistory.push(`/order/${order._id}`);\r\n\t\t\tdispatch({ type: ORDER_CREATE_RESET });\r\n\t\t}\r\n\t}, [success, history]);\r\n\r\n\tconst placeOrder = () => {\r\n\t\tconsole.log(\"placeOrder\");\r\n\t\tdispatch(\r\n\t\t\tcreateOrder({\r\n\t\t\t\torderItems: cart.cartItems,\r\n\t\t\t\tshippingAddress: cart.shippingAddress,\r\n\t\t\t\tpaymentMethod: cart.paymentMethod,\r\n\t\t\t\titemsPrice: cart.itemsPrice,\r\n\t\t\t\tshippingPrice: cart.shippingPrice,\r\n\t\t\t\ttaxPrice: cart.taxPrice,\r\n\t\t\t\ttotalPrice: cart.totalPrice,\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<CheckoutSteps step1 step2 step3 step4 />\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={8}>\r\n\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<h2>Shipping</h2>\r\n\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Shipping: </strong>\r\n\t\t\t\t\t\t\t\t{cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n\t\t\t\t\t\t\t\t{\"  \"}\r\n\t\t\t\t\t\t\t\t{cart.shippingAddress.postalCode},{\"  \"}\r\n\t\t\t\t\t\t\t\t{cart.shippingAddress.country}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<h2>Payment Method</h2>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Method: </strong>\r\n\t\t\t\t\t\t\t\t{cart.paymentMethod}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<h2>Order Items</h2>\r\n\t\t\t\t\t\t\t{cart.cartItems.length === 0 ? (\r\n\t\t\t\t\t\t\t\t<Message variant=\"info\">Your cart is empty</Message>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t\t\t\t{cart.cartItems.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col md={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={item.image}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={item.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/product/${item.product}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col md={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.qty} X ${item.price} = $\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{(item.qty * item.price).toFixed(2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t</ListGroup>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col md={4}>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<h2>Order Summary</h2>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>Items:</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>${cart.itemsPrice}</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>Shipping:</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>${cart.shippingPrice}</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>Tax:</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>${cart.taxPrice}</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>Total:</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>${cart.totalPrice}</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t{error && <Message variant=\"danger\">{error}</Message>}\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn-block\"\r\n\t\t\t\t\t\t\t\t\tdisabled={cart.cartItems === 0}\r\n\t\t\t\t\t\t\t\t\tonClick={placeOrder}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tPlace Order\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","D:\\ecommerce-django-react\\frontend\\src\\screens\\OrderScreen.js",["166","167","168"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n\tgetOrderDetails,\r\n\tpayOrder,\r\n\tdeliverOrder,\r\n} from \"../actions/orderActions\";\r\nimport {\r\n\tORDER_PAY_RESET,\r\n\tORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nfunction OrderScreen({ match, history }) {\r\n\tconst orderId = match.params.id;\r\n\tconst dispatch = useDispatch();\r\n\r\n\t// const [sdkReady, setSdkReady] = useState(false);\r\n\r\n\tconst orderDetails = useSelector((state) => state.orderDetails);\r\n\tconst { order, error, loading } = orderDetails;\r\n\r\n\t// const orderPay = useSelector((state) => state.orderPay);\r\n\t// const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n\tconst orderDeliver = useSelector((state) => state.orderDeliver);\r\n\tconst { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n\tconst userLogin = useSelector((state) => state.userLoginReducers);\r\n\tconst { userInfo } = userLogin;\r\n\r\n\tif (!loading && !error) {\r\n\t\torder.itemsPrice = order.orderItems\r\n\t\t\t.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n\t\t\t.toFixed(2);\r\n\t}\r\n\r\n\t// const addPayPalScript = () => {\r\n\t// \tconst script = document.createElement(\"script\");\r\n\t// \tscript.type = \"text/javascript\";\r\n\t// \tscript.src =\r\n\t// \t\t\"https://www.paypal.com/sdk/js?client-id=AcptGcogKrR9k3w6OD9ejhGziW-ZQoakA5zKtTiuUbn61jqBpcuyLMcFSa6-roH6kWflZr8sAJRZG2vJ\";\r\n\t// \tscript.async = true;\r\n\t// \tscript.onload = () => {\r\n\t// \t\tsetSdkReady(true);\r\n\t// \t};\r\n\t// \tdocument.body.appendChild(script);\r\n\t// };\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!userInfo) {\r\n\t\t\thistory.push(\"/login\");\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!order ||\r\n\t\t\t// successPay ||\r\n\t\t\torder._id !== Number(orderId) ||\r\n\t\t\tsuccessDeliver\r\n\t\t) {\r\n\t\t\tdispatch({ type: ORDER_PAY_RESET });\r\n\t\t\tdispatch({ type: ORDER_DELIVER_RESET });\r\n\r\n\t\t\tdispatch(getOrderDetails(orderId));\r\n\t\t} else if (!order.isPaid) {\r\n\t\t\tconsole.log(\"Not Pay Yet\");\r\n\t\t}\r\n\t}, [dispatch, order, orderId, successDeliver]);\r\n\r\n\t// const successPaymentHandler = (paymentResult) => {\r\n\t// \tdispatch(payOrder(orderId, paymentResult));\r\n\t// };\r\n\r\n\tconst deliverHandler = () => {\r\n\t\tdispatch(deliverOrder(order));\r\n\t};\r\n\r\n\treturn loading ? (\r\n\t\t<Loader />\r\n\t) : error ? (\r\n\t\t<Message variant=\"danger\">{error}</Message>\r\n\t) : (\r\n\t\t<div>\r\n\t\t\t<h1>Order: {order.Id}</h1>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={8}>\r\n\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<h2>Shipping</h2>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Name: </strong> {order.user.name}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Email: </strong>\r\n\t\t\t\t\t\t\t\t<a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Shipping: </strong>\r\n\t\t\t\t\t\t\t\t{order.shippingAddress.address}, {order.shippingAddress.city}\r\n\t\t\t\t\t\t\t\t{\"  \"}\r\n\t\t\t\t\t\t\t\t{order.shippingAddress.postalCode},{\"  \"}\r\n\t\t\t\t\t\t\t\t{order.shippingAddress.country}\r\n\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t{order.isDelivered ? (\r\n\t\t\t\t\t\t\t\t<Message variant=\"success\">\r\n\t\t\t\t\t\t\t\t\tDelivered on {order.deliveredAt}\r\n\t\t\t\t\t\t\t\t</Message>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Message variant=\"warning\">Not Delivered</Message>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<h2>Payment Method</h2>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Method: </strong>\r\n\t\t\t\t\t\t\t\t{order.paymentMethod}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t{order.isPaid ? (\r\n\t\t\t\t\t\t\t\t<Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Message variant=\"warning\">Not Paid</Message>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<h2>Order Items</h2>\r\n\t\t\t\t\t\t\t{order.orderItems.length === 0 ? (\r\n\t\t\t\t\t\t\t\t<Message variant=\"info\">Order is empty</Message>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t\t\t\t{order.orderItems.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col md={1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={item.image}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={item.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/product/${item.product}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col md={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.qty} X ${item.price} = $\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{(item.qty * item.price).toFixed(2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t</ListGroup>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col md={4}>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<h2>Order Summary</h2>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>Items:</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>${order.itemsPrice}</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>Shipping:</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>${order.shippingPrice}</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>Tax:</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>${order.taxPrice}</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>Total:</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>${order.totalPrice}</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t\t\t\t\t{/* {!order.isPaid && (\r\n\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t{loadingPay && <Loader />}\r\n\r\n\t\t\t\t\t\t\t\t\t{!sdkReady ? (\r\n\t\t\t\t\t\t\t\t\t\t<Loader />\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<PayPalButton\r\n\t\t\t\t\t\t\t\t\t\t\tamount={order.totalPrice}\r\n\t\t\t\t\t\t\t\t\t\t\tonSuccess={successPaymentHandler}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t</ListGroup>\r\n\r\n\t\t\t\t\t\t{loadingDeliver && <Loader />}\r\n\t\t\t\t\t\t{userInfo &&\r\n\t\t\t\t\t\t\tuserInfo.is_Admin &&\r\n\t\t\t\t\t\t\torder.isPaid &&\r\n\t\t\t\t\t\t\t!order.isDelivered && (\r\n\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={deliverHandler}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tMark As Delivered\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default OrderScreen;\r\n","D:\\ecommerce-django-react\\frontend\\src\\components\\Footer.js",[],"D:\\ecommerce-django-react\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\ecommerce-django-react\\frontend\\src\\screens\\PaymentScreen.js",["169"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\n\r\nfunction PaymentScreen({ history }) {\r\n\tconst cart = useSelector((state) => state.cartReducers);\r\n\tconst { shippingAddress } = cart;\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n\tif (!shippingAddress.address) {\r\n\t\thistory.push(\"/shipping\");\r\n\t}\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(savePaymentMethod(paymentMethod));\r\n\t\thistory.push(\"/placeorder\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<FormContainer>\r\n\t\t\t<CheckoutSteps step1 step2 step3 />\r\n\r\n\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label as=\"legend\">Select Method</Form.Label>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\tlabel=\"PayPal or Credit Card\"\r\n\t\t\t\t\t\t\tid=\"paypal\"\r\n\t\t\t\t\t\t\tname=\"paymentMethod\"\r\n\t\t\t\t\t\t\tchecked\r\n\t\t\t\t\t\t\tonChange={(e) => setPaymentMethod(e.target.value)}\r\n\t\t\t\t\t\t></Form.Check>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Button type=\"submit\" variant=\"primary\">\r\n\t\t\t\t\tContinue\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t</FormContainer>\r\n\t);\r\n}\r\n\r\nexport default PaymentScreen;\r\n","D:\\ecommerce-django-react\\frontend\\src\\components\\Header.js",["170"],"D:\\ecommerce-django-react\\frontend\\src\\components\\Loader.js",[],"D:\\ecommerce-django-react\\frontend\\src\\components\\Message.js",[],"D:\\ecommerce-django-react\\frontend\\src\\components\\Rating.js",[],"D:\\ecommerce-django-react\\frontend\\src\\components\\FormContainer.js",[],"D:\\ecommerce-django-react\\frontend\\src\\components\\Product.js",[],"D:\\ecommerce-django-react\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\ecommerce-django-react\\frontend\\src\\components\\SearchBox.js",[],"D:\\ecommerce-django-react\\frontend\\src\\constants\\userConstants.js",[],"D:\\ecommerce-django-react\\frontend\\src\\constants\\orderConstants.js",[],"D:\\ecommerce-django-react\\frontend\\src\\constants\\cartConstants.js",[],"D:\\ecommerce-django-react\\frontend\\src\\constants\\productConstants.js",[],"D:\\ecommerce-django-react\\frontend\\src\\actions\\userActions.js",["171","172"],"import {\r\n\tUSER_LOGIN_REQUEST,\r\n\tUSER_LOGIN_SUCCESS,\r\n\tUSER_LOGIN_FAIL,\r\n\tUSER_LOGOUT,\r\n\tUSER_REGISTER_REQUEST,\r\n\tUSER_REGISTER_SUCCESS,\r\n\tUSER_REGISTER_FAIL,\r\n\tUSER_DETAILS_REQUEST,\r\n\tUSER_DETAILS_SUCCESS,\r\n\tUSER_DETAILS_FAIL,\r\n\tUSER_DETAILS_RESET,\r\n\tUSER_UPDATE_PROFILE_REQUEST,\r\n\tUSER_UPDATE_PROFILE_SUCCESS,\r\n\tUSER_UPDATE_PROFILE_FAIL,\r\n\tUSER_UPDATE_PROFILE_RESET,\r\n\tUSER_LIST_REQUEST,\r\n\tUSER_LIST_SUCCESS,\r\n\tUSER_LIST_FAIL,\r\n\tUSER_LIST_RESET,\r\n\tUSER_DELETE_REQUEST,\r\n\tUSER_DELETE_SUCCESS,\r\n\tUSER_DELETE_FAIL,\r\n\tUSER_UPDATE_REQUEST,\r\n\tUSER_UPDATE_SUCCESS,\r\n\tUSER_UPDATE_FAIL,\r\n\tUSER_UPDATE_RESET,\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t\"/api/users/login/\",\r\n\t\t\t{ username: email, password: password },\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\r\n\t\tlocalStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.detail\r\n\t\t\t\t\t? error.response.data.detail\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n\tlocalStorage.removeItem(\"userInfo\");\r\n\tdispatch({ type: USER_LOGOUT });\r\n\tdispatch({ type: USER_DETAILS_RESET });\r\n\tdispatch({ type: ORDER_LIST_MY_RESET });\r\n\tdispatch({ type: USER_LIST_RESET });\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_REGISTER_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t\"/api/users/register/\",\r\n\t\t\t{ name: name, email: email, password: password },\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_REGISTER_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\r\n\t\t// dispatch({\r\n\t\t// \ttype: USER_LOGIN_SUCCESS,\r\n\t\t// \tpayload: data,\r\n\t\t// });\r\n\r\n\t\tlocalStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_REGISTER_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.detail\r\n\t\t\t\t\t? error.response.data.detail\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DETAILS_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLoginReducers: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`/api/users/${id}/`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DETAILS_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DETAILS_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.detail\r\n\t\t\t\t\t? error.response.data.detail\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_UPDATE_PROFILE_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLoginReducers: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.put(\r\n\t\t\t`/api/users/profile/update/`,\r\n\t\t\tuser,\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_UPDATE_PROFILE_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\r\n\t\tlocalStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_UPDATE_PROFILE_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.detail\r\n\t\t\t\t\t? error.response.data.detail\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LIST_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLoginReducers: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`/api/users/`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LIST_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LIST_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.detail\r\n\t\t\t\t\t? error.response.data.detail\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DELETE_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.delete(`/api/users/delete/${id}/`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DELETE_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DELETE_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.detail\r\n\t\t\t\t\t? error.response.data.detail\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_UPDATE_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLoginReducers: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.put(\r\n\t\t\t`/api/users/update/${user._id}/`,\r\n\t\t\tuser,\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_UPDATE_SUCCESS,\r\n\t\t});\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DETAILS_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_UPDATE_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.detail\r\n\t\t\t\t\t? error.response.data.detail\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n","D:\\ecommerce-django-react\\frontend\\src\\actions\\cartActions.js",[],"D:\\ecommerce-django-react\\frontend\\src\\actions\\productActions.js",["173"],"import axios from \"axios\";\r\nimport {\r\n\tPRODUCT_LIST_REQUEST,\r\n\tPRODUCT_LIST_SUCCESS,\r\n\tPRODUCT_LIST_FAIL,\r\n\tPRODUCT_DETAILS_REQUEST,\r\n\tPRODUCT_DETAILS_SUCCESS,\r\n\tPRODUCT_DETAILS_FAIL,\r\n\tPRODUCT_DELETE_REQUEST,\r\n\tPRODUCT_DELETE_SUCCESS,\r\n\tPRODUCT_DELETE_FAIL,\r\n\tPRODUCT_CREATE_REQUEST,\r\n\tPRODUCT_CREATE_SUCCESS,\r\n\tPRODUCT_CREATE_FAIL,\r\n\tPRODUCT_UPDATE_REQUEST,\r\n\tPRODUCT_UPDATE_SUCCESS,\r\n\tPRODUCT_UPDATE_FAIL,\r\n\tPRODUCT_CREATE_REVIEW_REQUEST,\r\n\tPRODUCT_CREATE_REVIEW_SUCCESS,\r\n\tPRODUCT_CREATE_REVIEW_FAIL,\r\n\tPRODUCT_TOP_REQUEST,\r\n\tPRODUCT_TOP_SUCCESS,\r\n\tPRODUCT_TOP_FAIL,\r\n} from \"../constants/productConstants\";\r\n\r\nexport const listProducts =\r\n\t(keyword = \"\") =>\r\n\tasync (dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n\t\t\tconst { data } = await axios.get(`/api/products${keyword}`);\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: PRODUCT_LIST_SUCCESS,\r\n\t\t\t\tpayload: data,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: PRODUCT_LIST_FAIL,\r\n\t\t\t\tpayload:\r\n\t\t\t\t\terror.response && error.response.data.detail\r\n\t\t\t\t\t\t? error.response.data.detail\r\n\t\t\t\t\t\t: error.message,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n\t\tconst { data } = await axios.get(`/api/products/${id}`);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_DETAILS_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_DETAILS_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.detail\r\n\t\t\t\t\t? error.response.data.detail\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n\t\tconst { data } = await axios.get(`/api/products/top/`);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_TOP_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_TOP_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.detail\r\n\t\t\t\t\t? error.response.data.detail\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_DELETE_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLoginReducers: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.delete(`/api/products/delete/${id}/`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_DELETE_SUCCESS,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_DELETE_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.detail\r\n\t\t\t\t\t? error.response.data.detail\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_CREATE_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLoginReducers: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(`/api/products/create/`, {}, config);\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_CREATE_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_CREATE_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.detail\r\n\t\t\t\t\t? error.response.data.detail\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_UPDATE_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLoginReducers: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.put(\r\n\t\t\t`/api/products/update/${product._id}/`,\r\n\t\t\tproduct,\r\n\t\t\tconfig\r\n\t\t);\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_UPDATE_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_DETAILS_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: PRODUCT_UPDATE_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.detail\r\n\t\t\t\t\t? error.response.data.detail\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const createProductReview =\r\n\t(productId, review) => async (dispatch, getState) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: PRODUCT_CREATE_REVIEW_REQUEST,\r\n\t\t\t});\r\n\r\n\t\t\tconst {\r\n\t\t\t\tuserLoginReducers: { userInfo },\r\n\t\t\t} = getState();\r\n\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tconst { data } = await axios.post(\r\n\t\t\t\t`/api/products/${productId}/reviews/`,\r\n\t\t\t\treview,\r\n\t\t\t\tconfig\r\n\t\t\t);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n\t\t\t\tpayload: data,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: PRODUCT_CREATE_REVIEW_FAIL,\r\n\t\t\t\tpayload:\r\n\t\t\t\t\terror.response && error.response.data.detail\r\n\t\t\t\t\t\t? error.response.data.detail\r\n\t\t\t\t\t\t: error.message,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n","D:\\ecommerce-django-react\\frontend\\src\\actions\\orderActions.js",["174","175","176"],"import axios from \"axios\";\r\nimport {\r\n\tORDER_CREATE_REQUEST,\r\n\tORDER_CREATE_SUCCESS,\r\n\tORDER_CREATE_FAIL,\r\n\tORDER_DETAILS_REQUEST,\r\n\tORDER_DETAILS_SUCCESS,\r\n\tORDER_DETAILS_FAIL,\r\n\tORDER_PAY_REQUEST,\r\n\tORDER_PAY_SUCCESS,\r\n\tORDER_PAY_FAIL,\r\n\tORDER_PAY_RESET,\r\n\tORDER_LIST_MY_REQUEST,\r\n\tORDER_LIST_MY_SUCCESS,\r\n\tORDER_LIST_MY_FAIL,\r\n\tORDER_LIST_MY_RESET,\r\n\tORDER_LIST_REQUEST,\r\n\tORDER_LIST_SUCCESS,\r\n\tORDER_LIST_FAIL,\r\n\tORDER_DELIVER_REQUEST,\r\n\tORDER_DELIVER_SUCCESS,\r\n\tORDER_DELIVER_FAIL,\r\n\tORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_CREATE_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLoginReducers: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(`/api/orders/add/`, order, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_CREATE_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CART_CLEAR_ITEMS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\r\n\t\tlocalStorage.removeItem(\"cartItems\");\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_CREATE_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.detail\r\n\t\t\t\t\t? error.response.data.detail\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_DETAILS_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLoginReducers: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`/api/orders/${id}/`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_DETAILS_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_DETAILS_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.detail\r\n\t\t\t\t\t? error.response.data.detail\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_PAY_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLoginReducers: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.put(\r\n\t\t\t`/api/orders/${id}/pay/`,\r\n\t\t\tpaymentResult,\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_PAY_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_PAY_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.detail\r\n\t\t\t\t\t? error.response.data.detail\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_LIST_MY_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLoginReducers: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`/api/orders/myorders/`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_LIST_MY_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_LIST_MY_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.detail\r\n\t\t\t\t\t? error.response.data.detail\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_LIST_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLoginReducers: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`/api/orders/`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_LIST_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_LIST_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.detail\r\n\t\t\t\t\t? error.response.data.detail\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_DELIVER_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLoginReducers: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.put(\r\n\t\t\t`/api/orders/${order._id}/deliver/`,\r\n\t\t\t{},\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_DELIVER_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_DELIVER_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.detail\r\n\t\t\t\t\t? error.response.data.detail\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n",{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":1,"column":8,"nodeType":"183","messageId":"184","endLine":1,"endColumn":13},{"ruleId":"185","severity":1,"message":"186","line":153,"column":44,"nodeType":"187","messageId":"188","endLine":153,"endColumn":46},{"ruleId":"181","severity":1,"message":"189","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"185","severity":1,"message":"190","line":33,"column":16,"nodeType":"187","messageId":"188","endLine":33,"endColumn":18},{"ruleId":"181","severity":1,"message":"191","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":14},{"ruleId":"185","severity":1,"message":"190","line":53,"column":16,"nodeType":"187","messageId":"188","endLine":53,"endColumn":18},{"ruleId":"181","severity":1,"message":"192","line":1,"column":27,"nodeType":"183","messageId":"184","endLine":1,"endColumn":36},{"ruleId":"181","severity":1,"message":"189","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"193","severity":1,"message":"194","line":39,"column":5,"nodeType":"195","endLine":39,"endColumn":23,"suggestions":"196"},{"ruleId":"181","severity":1,"message":"189","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"197","line":9,"column":2,"nodeType":"183","messageId":"184","endLine":9,"endColumn":10},{"ruleId":"193","severity":1,"message":"198","line":71,"column":5,"nodeType":"195","endLine":71,"endColumn":47,"suggestions":"199"},{"ruleId":"181","severity":1,"message":"192","line":1,"column":27,"nodeType":"183","messageId":"184","endLine":1,"endColumn":36},{"ruleId":"181","severity":1,"message":"200","line":3,"column":34,"nodeType":"183","messageId":"184","endLine":3,"endColumn":37},{"ruleId":"181","severity":1,"message":"201","line":16,"column":2,"nodeType":"183","messageId":"184","endLine":16,"endColumn":27},{"ruleId":"181","severity":1,"message":"202","line":27,"column":2,"nodeType":"183","messageId":"184","endLine":27,"endColumn":19},{"ruleId":"181","severity":1,"message":"203","line":108,"column":11,"nodeType":"183","messageId":"184","endLine":108,"endColumn":15},{"ruleId":"181","severity":1,"message":"204","line":12,"column":2,"nodeType":"183","messageId":"184","endLine":12,"endColumn":17},{"ruleId":"181","severity":1,"message":"205","line":16,"column":2,"nodeType":"183","messageId":"184","endLine":16,"endColumn":21},{"ruleId":"181","severity":1,"message":"206","line":23,"column":2,"nodeType":"183","messageId":"184","endLine":23,"endColumn":21},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","Expected '!==' and instead saw '!='.","'Link' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["209"],"'payOrder' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["210"],"'Row' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'USER_UPDATE_RESET' is defined but never used.","'data' is assigned a value but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"215","text":"216"},"Update the dependencies array to be: [dispatch, history, order, orderId, successDeliver, userInfo]",{"range":"217","text":"218"},[1284,1302],"[success, history, order._id, dispatch]",[2131,2173],"[dispatch, history, order, orderId, successDeliver, userInfo]"]